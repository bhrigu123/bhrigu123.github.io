<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bhrigu Srivastava]]></title>
  <link href="http://bhrigu123.github.io//atom.xml" rel="self"/>
  <link href="http://bhrigu123.github.io//"/>
  <updated>2016-12-08T11:41:55+05:30</updated>
  <id>http://bhrigu123.github.io//</id>
  <author>
    <name><![CDATA[Bhrigu Srivastava]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hyderabad Times | Amazon Internship]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/10/12/hyderabad-moments-amazon-internship/"/>
    <updated>2016-10-12T11:38:45+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/10/12/hyderabad-moments-amazon-internship</id>
    <content type="html"><![CDATA[<p>My 2 month internship at Amazon was an amazing experience and a new phase, be it living separately for the first time in a different city, or my first ever internship/job experience. <!--more--></p>

<p>Hyderabad turned out to be a pretty nice place to be in. Our stay for the first two weeks of the internship was taken care of at a Guest House. It was located in Telecom Nagar and turned out to be much better than our expectations. We were each given lavish rooms and great facilities.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/room.jpg" title="Room" >
    <small>Stay at the Guest house</small>
</center>


<p><br></p>

<p>However, after two weeks of relaxed stay at the Guest House, it was hard to adapt to the conditions of PG, which we found in a nearby place only.</p>

<p>Straight from the beginning, the weather in Hyderabad was actually much colder than anticipated. It was the time for rains and cold winds. The fan speed in our room never exceeded 1 and we used geysers/heating rods for daily baths.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/rain.jpg" title="Rain" >
</center>


<p><br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/rainbow.jpg" title="Rainbow" >
</center>


<p><br></p>

<p>I also made the most of my time at my workplace, besides work, meeting new people, trying different things from the cafeteria everyday and playing pool&hellip;..hell lot of pool. After two months of practice I&rsquo;m now a semi-pro in pool.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/desk.jpg" title="Desk" >
    <small>My work desk</small>
</center>


<p><br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/office.jpg" title="Office" >
    <small>Amazon office on the right</small>
</center>


<p><br></p>

<p>Being a sports lover, I liked the fact that my team indulged in a lot of sports activities too. Every Saturday (and most of Wednesdays) they would go out to play Badminton in the academy. Those were some great times too.</p>

<p>Staying in a Hostel/PG was a completely different experience. With all college friends in the surrounding rooms, the time spent was great, and my roommate turned out to be a pretty chill guy. Turned out, we had the same taste in music, liked playing cricket and&hellip;..loved eating cheetos. One thing I ate the most throughout the 2 months would be Cheetos I&rsquo;m pretty sure.<br>
We even bought a cricket ball and would play cricket in our PG&rsquo;s common area.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/pg.jpg" title="PG" >
    <small>PG Room. All day playing songs through our TV</small>
</center>


<p><br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/cheetos.jpg" title="Cheetos" >
    <small></small>
</center>


<p><br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/hyd/pgback.jpg" title="PG" >
    <small>Back view</small>
</center>


<p><br></p>

<p>The times spent were memorable&hellip;the people, the places, and moments with the friends. I remember on my last week of the internship, we ended playing table tennis till 5 in the morning in the office, while the next day I was supposed to complete and submit my Self Review doc.<br>
Great times!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Photoshoot @ Lodhi Garden]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/06/03/photoshoot-at-lodhi-garden/"/>
    <updated>2016-06-03T14:21:24+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/06/03/photoshoot-at-lodhi-garden</id>
    <content type="html"><![CDATA[<p>Before I leave for Hyderabad in a few days, I thought of paying another visit to Lodhi Garden, and immerse myself into its serene environment one last time (before I return).</p>

<!-- more -->


<p>I usually do not carry my cell phone whenever I go out for a walk, but this time I thought of capturing some moments and, well, share on my blog.</p>

<p>I take the road along my colony to cover up 1.5 KMs to reach the garden.</p>

<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/1.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>




<div style="height:25px;"></div>


<p style="text-align: center;">The trees will greet you along the path at the entrance of the garden.</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/2.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>




<div style="height:25px;"></div>


<p style="text-align: center;">The dome called the <i>Sheesh Gumbad</i></p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/3.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>




<div style="height:25px;"></div>


<p style="text-align: center;">HDR Mode ON</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/4.jpg"></p>

<div style="height:866px" class="invisible-div"></div>




<div style="height:25px;"></div>


<p style="text-align: center;">Lost in the greenery</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/5.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/6.jpg"></p>

<div style="height:1030px" class="invisible-div"></div>




<p style="text-align: center;">" Oh dont mind. Just chillin' "</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/7.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>




<p style="text-align: center;">The lake's here</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/8.jpg"></p>

<div style="height:1010px" class="invisible-div"></div>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/9.jpg"></p>

<div style="height:785px" class="invisible-div"></div>




<blockquote>Dammit Paul! Don't break the line!</blockquote>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/10.jpg"></p>

<div style="height:785px" class="invisible-div"></div>


<blockquote>A closer look</blockquote>




<p style="text-align: center;">Sunbath + Sprinkler bath = Ultimate bath</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/11.jpg"></p>

<div style="height:1060px" class="invisible-div"></div>




<p style="text-align: center;">Some school children on their picnic. I now remember my school days when we were brought here a lot. Those were some glorious times</p>


<p><img style="width:100%; position:absolute; left:0" src="http://bhrigu123.github.io//images/lodhi/12.jpg"></p>

<div style="height:1060px" class="invisible-div"></div>


<p>Well, that&rsquo;s all folks!</p>

<p>Until next time.</p>

<div style="height:10px;"></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django: How to Add ForeignKey to Multiple Models]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/05/21/django-how-to-add-foreignkey-to-multiple-models/"/>
    <updated>2016-05-21T01:28:37+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/05/21/django-how-to-add-foreignkey-to-multiple-models</id>
    <content type="html"><![CDATA[<p>Basically, how to make relation to more than one type of model, using one ForeignKey. (using <em>contenttypes</em> app and <em>Generic Relations</em>)</p>

<p>Suppose you have two models: <code>Article</code> and <code>Post</code> <!--more--></p>

<figure class='code'><figcaption><span>models.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Article</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>  <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, we’ll have a <code>Comment</code> model. Here, both an <code>Article</code> or a <code>Post</code> can have a comment. So, how to add a ForeignKey value in the Comment model, which could point to either of the above models.</p>

<p>We’ll use the concept of <em>Generic Relation</em>, which allows us to do so. Django includes a <a href="https://docs.djangoproject.com/en/dev/ref/contrib/contenttypes/#module-django.contrib.contenttypes">contenttypes</a> application, and relations between your models and ContentType model in that application can also be used to enable “generic” relationships between an instance of one of your models and instances of any model you have installed.</p>

<p>The format of our <strong>Comment</strong> model will be like:</p>

<figure class='code'><figcaption><span>models.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.contrib.contenttypes.fields</span> <span class="kn">import</span> <span class="n">GenericForeignKey</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.contrib.contenttypes.models</span> <span class="kn">import</span> <span class="n">ContentType</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Comment</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>  <span class="n">comm</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">content_type</span> <span class="o">=</span>   <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">ContentType</span><span class="p">)</span>
</span><span class='line'>  <span class="n">object_id</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">PositiveIntegerField</span><span class="p">()</span>
</span><span class='line'>  <span class="n">content_object</span><span class="o">=</span><span class="n">GenericForeignKey</span><span class="p">(</span><span class="s">&#39;content_type&#39;</span><span class="p">,</span> <span class="s">&#39;object_id&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>(The last three lines will be same every time you want to use generic relations like this.)</p>

<p>Now, we can relate a <code>Comment</code> object to any kind of model, by sending it which <em>model</em> we have to relate it to in the <code>content_type</code> parameter, and the <em>id</em> of the object of that model to relate to in the <code>object_id</code> parameter.<br>
(or by just sending the object to relate to, to the <em>content_object</em> parameter of <code>Comment</code>, as shown below)</p>

<p>Now, we’ll create the <strong>Comment</strong> instances, and relate it to either an <strong>Article</strong> instance, or a <strong>Post</strong> instance.</p>

<p>To relate a <em>Comment</em> to an <em>Article</em> instance:</p>

<figure class='code'><figcaption><span>shell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">art</span> <span class="o">=</span> <span class="n">Article</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">Comment</span><span class="p">(</span><span class="n">content_object</span><span class="o">=</span><span class="n">art</span><span class="p">,</span> <span class="n">comm</span><span class="o">=</span><span class="s">&#39;asdf&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">content_object</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">Article</span><span class="p">:</span> <span class="n">article1</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To relate a <em>Comment</em> to a <em>Post</em> instance:</p>

<figure class='code'><figcaption><span>shell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">pos</span><span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="o">=</span> <span class="n">Comment</span><span class="p">(</span><span class="n">content_object</span><span class="o">=</span><span class="n">pos</span><span class="p">,</span> <span class="n">comm</span><span class="o">=</span><span class="s">&#39;new comment&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">content_object</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">post1</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Reverse Generic Relations</h3>

<p>Now, to get all the comments related to an <code>Article</code> or a <code>Post</code>, we can use the <strong>GenericRelation</strong> class for this.</p>

<p>We need to define a new attribute under the Article and Post models. Add the attribute for reverse query under your models as:</p>

<figure class='code'><figcaption><span>models.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.contrib.contenttypes.fields</span> <span class="kn">import</span> <span class="n">GenericRelation</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Article</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>    <span class="n">comments</span> <span class="o">=</span> <span class="n">GenericRelation</span><span class="p">(</span><span class="n">Comment</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>    <span class="n">content</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>    <span class="n">comments</span> <span class="o">=</span> <span class="n">GenericRelation</span><span class="p">(</span><span class="n">Comment</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, a query of <code>model_object.comments.all()</code> will give all the comments related to that object. Like, if <em>art</em> is an Article instance, and <em>pos</em> is a Post instance:</p>

<figure class='code'><figcaption><span>shell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">art</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">QuerySet</span> <span class="p">[</span><span class="o">&lt;</span><span class="n">Comment</span><span class="p">:</span> <span class="n">asdf</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Comment</span><span class="p">:</span> <span class="n">test</span><span class="o">&gt;</span><span class="p">]</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">pos</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">QuerySet</span> <span class="p">[</span><span class="o">&lt;</span><span class="n">Comment</span><span class="p">:</span> <span class="n">new_comment</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Comment</span><span class="p">:</span> <span class="n">test2</span><span class="o">&gt;</span><span class="p">]</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That is all you need to know for basic working required for ‘relating an instance to multiple Models’.</p>

<p>You can know more about contenttypes application, ContentType model and GenericRelations on their docs: <a href="https://docs.djangoproject.com/en/dev/ref/contrib/contenttypes/">The contenttypes framework</a>.</p>

<hr>


<blockquote><p><em>This article is also posted on my Medium account at: <a href="https://medium.com/@bhrigu/django-how-to-add-foreignkey-to-multiple-models-394596f06e84#.vtjdo4vz5">Django: How to add foreign key to multiple models</a></em></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Song of Ice and Fire: Analysis]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/04/17/a-song-of-ice-and-fire-analysis/"/>
    <updated>2016-04-17T13:55:38+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/04/17/a-song-of-ice-and-fire-analysis</id>
    <content type="html"><![CDATA[<p>&ldquo;Game of Thrones&rdquo; is almost on every lips of the people you come across. You yourself might be an ardent follower of the hit HBO TV series. But what you might not be aware of is the genius put behind in building up this epic fantasy series, by none other than the author himself of A song of ice and fire books: George RR Martin. <!--more--></p>

<p>I myself was a huge fan of the TV series, without giving much thought to what would it be like in the books. Until my last vacation of Dec &lsquo;15. I casually took up the first book of the series, which is <em>'A Game of Thrones&rsquo;</em>, and before I knew, I was reading <em>&lsquo;A Clash of Kings&rsquo;</em>, then <em>&lsquo;A Storm of Swords&rsquo;</em>, followed by <em>&lsquo;A Feast for Crows&rsquo;</em> and then <em>&lsquo;A Dance with Dragons&rsquo;</em>.</p>

<p>GRRM has done some phenomenal work in setting up the whole picture: the maps of the 2 worlds, <em>Westeros</em> and <em>Essos</em>, the sub-plots, the life beyond the <em>Wall</em>, the religions, politics, supernatural elements, the romance, love and betrayal, and the things beyond your wildest imaginations. It wouldn&rsquo;t matter if you have seen the series or not, the books will get you hooked till the very end, and leave you awestruck the whole time.<br>
You would be taken away completely and your imagninations will paint a vivid picture of a whole new world.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/asoiaf/robb.jpg" title="The King in the North" >
</center>


<center><small>The King in the North</small></center>


<p><br></p>

<p>In this writing style, each chapter is based on a character&rsquo;s <em>perspective</em>. Like a chapter named <em>Jon</em> would revolve around the events and thoughts of Jon Snow only, ie, you would follow Jon&rsquo;s plot, read <em>his</em> thoughts and see things around the world from his perspective. In this way, you get to live the lives of the characters yourself.</p>

<p><strong>Characters</strong></p>

<p>Like a <em>warg</em>, you could actually get inside the characters and live their life. The author splendidly built up the characters such that you get to know their true nature, purpose and evokes your emotions for them.</p>

<h3>Jaime</h3>

<blockquote><p>This is what a king should look like.</p>

<p>&ndash; <cite>thought Jon Snow, the first time he saw Jaime Lannister at the halls of Winterfell</cite></p></blockquote>

<p>Jaime bore true love for Cersei. They were inseperable since their early childhood. Infact, when his marriage was being arranged with Lysa Tully, that was when he considered joining the <em>Kingsguard</em>, thus releiving himself from marriages.</p>

<p>You might have a mixed notion about Jaime, considering the incidents of Bran, and attacking Ned Stark&rsquo;s men in King&rsquo;s Landing. But turns out, Jaime is of a rash character, and he kind of had reasons for acting so reckless. You must also reflect on the facts which shows a different view of his character:</p>

<ul>
<li><p>When released by Catelyn, and was being escorted by Brienne, Jaime had decided that he <strong>would</strong> return the Stark girls to Catelyn.</p></li>
<li><p>The <em>Mad King</em> had <em>Wildfire</em> hidden all across the Capital, and was about to burn down the whole city along with all its people. But Jaime made sure that did not happen, when he pierced through the back of King Aerys with his sword. Thus, in a way, he had saved the entire population of the King&rsquo;s Landing. But in return, all he got was the brand <strong><em>Kingslayer</em></strong>, being called <em>Oathbreaker</em> throughout his life, and a man without <em>honour</em>.</p></li>
<li><p>Jaime had promised Catelyn that he would never raise swords against any Stark or Tully. Turned out, he <em>did</em> keep up to his promise. When he went to break the sieges of the Tully occupied castles, he could have used his forces against them, but all he did was talk his way into them and only negotiated.</p></li>
</ul>


<h3>Tyrion</h3>

<p>During the feast held for Robert at Winterfell, Tyrion shared some piece of advice with Jon outside the hall. On his way back, when he opened the door, the light from within threw his shadow across the yard, and Jon saw that <strong><em>for just a moment, Tyrion Lannister stood as tall as a king</em></strong>.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/asoiaf/tyrion.jpg" title="Tyrion with Jon" >
</center>


<center>
    <small>Tyrion, Jon and Ghost. source: reddit</small>
</center>


<p><br></p>

<blockquote><p>Ofttimes a very small man can cast a very large shadow.</p>

<p><cite>&ndash; Varys (A Clash of Kings)</cite></p></blockquote>

<p>Tyrion is a small man, yet so big. He is quite different from the other Lannisters. His witty responses, soft spot in the heart, and rational nature will make him your favourite character. Plus, he slapped Joffery&hellip;&hellip;..4 times.</p>

<h3>Stannis</h3>

<p>Stannis' introduction will make you feel sorry for him and his life. Throughout his life, he was the one less loved, was always overshadowed by his elder brother Robert Baratheon, and was not given his fair share for his accomplishments.</p>

<p>Stannis held the castle Storm&rsquo;s End against an year long siege, during Robert&rsquo;s rebellion. Stannis destroyed the Iron fleets during the Greyjoy&rsquo;s Rebellion. Stannis led the assault on Dragonstone, which was the last event in the Robert&rsquo;s Rebellion, and led to the fall of Targaryen dynasty, and the rise of Baratheon dynasty.</p>

<p>But in the end he couldn&rsquo;t even get a word of praise from Robert for all his efforts, and was just made lord of the lonely, barren island Dragonstone, while the great Baratheon castle Storm&rsquo;s End was given to his younger brother Renly, even after doing nothing. Moreover, Robert blamed Stannis for the escape of Daenerys and Viserys from Dragonstone, as if there was anything he could&rsquo;ve done to prevent that.</p>

<p>All his life Stannis lived in the shadow of his older brother. Whatever he did, Robert had done it already, and better.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/asoiaf/stannis1.png" title="Stannis at Blackwater" >
</center>


<center><small>Stannis at Blackwater</small></center>


<p><br></p>

<p>Stannis fell, lost the battle of Blackwater, but rose again, tried harder and never stopped. He never gave up. After Robert, Stannis had the best claim to the Iron Throne, and he was the <strong><em>one true king of Westeros</em></strong>. When the <em>Wall</em> was under attack and called out to all the Kings for support, Stannis was the one who came, the one who cared, and the one who did his duty.</p>

<blockquote><p>Few of the birds that Aemon had sent off had returned as yet. One reached Stannis, though. One found Dragonstone, and a king who still cared.</p>

<p><cite> &ndash; Samwell Tarly (A Storm of Swords)</p></blockquote>

<hr>


<hr>


<p>Well, if I continued like this I would never be able to stop ;) <br>
I had so much to talk about the books, and it&rsquo;s probably best if my keep my post about this length only.</p>

<p>I would recommend you these books, no matter if you have seen the TV show or not. I would end with this quote I liked from the last book of the series :</p>

<blockquote><p>A reader lives a thousand lives before he dies. The man who never reads lives only one.</p>

<p>&ndash; Jojen Reed (A Dance with Dragons)</p></blockquote>

<p><br>
<br>
&ndash; Bhrigu Srivastava <br>
<small>First of his name, King of the Blog</small></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Jug Problem - Python Code]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/04/04/3-jug-problem-python-code/"/>
    <updated>2016-04-04T23:36:57+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/04/04/3-jug-problem-python-code</id>
    <content type="html"><![CDATA[<p>I came across this image by a Facebook page (<a href="https://www.facebook.com/curiositydotcom/">Curiosity</a>), which asked a solution to the famous Water Jug problem, involving 3 jugs.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/jug/jug.jpg" title="Water Jug Problem" >
</center>


<p><br> <!--more--></p>

<p><strong>Problem</strong>: Given 3 jugs of capacites: 12, 8 and 5 litres. Our 12 L jug is completely filled. Using these 3 jugs split the water to obtain exactly 6 Litres.</p>

<p>So I thought, instead of going hit and trial to find a solution, why not write a Python code and feel awesome about it.</p>

<p>Because Why Not?</p>

<p>So I used DFS to search through all the states of the jugs. At each state, we&rsquo;ll have certain choices of emptying water from one jug into another. We&rsquo;ll try each choice, calling our function for each state, and if we reach the goal state, we stop.</p>

<p>[<em>Note that the given program could be made smaller/modular, but it is more understandable given this way. Also, DFS might not give an optimal (best path) solution. For that use BFS</em>]</p>

<figure class='code'><figcaption><span>3 Jug Problem</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># 3 water jugs capacity -&gt; (x,y,z) where x&gt;y&gt;z</span>
</span><span class='line'><span class="c"># initial state (12,0,0)</span>
</span><span class='line'><span class="c"># final state (6,6,0)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">capacity</span> <span class="o">=</span> <span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="c"># Maximum capacities of 3 jugs -&gt; x,y,z</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">capacity</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="n">capacity</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="n">capacity</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># to mark visited states</span>
</span><span class='line'><span class="n">memory</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># store solution path</span>
</span><span class='line'><span class="n">ans</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_all_states</span><span class="p">(</span><span class="n">state</span><span class="p">):</span>
</span><span class='line'>  <span class="c"># Let the 3 jugs be called a,b,c</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="n">state</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>  <span class="n">b</span> <span class="o">=</span> <span class="n">state</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">state</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">6</span> <span class="ow">and</span> <span class="n">b</span><span class="o">==</span><span class="mi">6</span><span class="p">):</span>
</span><span class='line'>      <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># if current state is already visited earlier</span>
</span><span class='line'>  <span class="k">if</span><span class="p">((</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span> <span class="ow">in</span> <span class="n">memory</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">memory</span><span class="p">[(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">#empty jug a</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#empty a into b</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">&lt;=</span><span class="n">y</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="o">-</span><span class="p">(</span><span class="n">y</span><span class="o">-</span><span class="n">b</span><span class="p">),</span> <span class="n">y</span><span class="p">,</span> <span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="c">#empty a into c</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">c</span><span class="o">&lt;=</span><span class="n">z</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="o">-</span><span class="p">(</span><span class="n">z</span><span class="o">-</span><span class="n">c</span><span class="p">),</span> <span class="n">b</span><span class="p">,</span> <span class="n">z</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">#empty jug b</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#empty b into a</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">&lt;=</span><span class="n">x</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">b</span><span class="o">-</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">a</span><span class="p">),</span> <span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="c">#empty b into c</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="o">&lt;=</span><span class="n">z</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">-</span><span class="p">(</span><span class="n">z</span><span class="o">-</span><span class="n">c</span><span class="p">),</span> <span class="n">z</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">#empty jug c</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">c</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#empty c into a</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">c</span><span class="o">&lt;=</span><span class="n">x</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">-</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">a</span><span class="p">)))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="c">#empty c into b</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="o">&lt;=</span><span class="n">y</span><span class="p">):</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">get_all_states</span><span class="p">((</span><span class="n">a</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">c</span><span class="o">-</span><span class="p">(</span><span class="n">y</span><span class="o">-</span><span class="n">b</span><span class="p">)))</span> <span class="p">):</span>
</span><span class='line'>              <span class="n">ans</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">state</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>
</span><span class='line'><span class="n">initial_state</span> <span class="o">=</span> <span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;Starting work...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">get_all_states</span><span class="p">(</span><span class="n">initial_state</span><span class="p">)</span>
</span><span class='line'><span class="n">ans</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">ans</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Starting work...
</span><span class='line'>
</span><span class='line'><span class="o">(</span>12, 0, 0<span class="o">)</span>
</span><span class='line'><span class="o">(</span>4, 8, 0<span class="o">)</span>
</span><span class='line'><span class="o">(</span>0, 8, 4<span class="o">)</span>
</span><span class='line'><span class="o">(</span>8, 0, 4<span class="o">)</span>
</span><span class='line'><span class="o">(</span>8, 4, 0<span class="o">)</span>
</span><span class='line'><span class="o">(</span>3, 4, 5<span class="o">)</span>
</span><span class='line'><span class="o">(</span>3, 8, 1<span class="o">)</span>
</span><span class='line'><span class="o">(</span>11, 0, 1<span class="o">)</span>
</span><span class='line'><span class="o">(</span>11, 1, 0<span class="o">)</span>
</span><span class='line'><span class="o">(</span>6, 1, 5<span class="o">)</span>
</span><span class='line'><span class="o">(</span>6, 6, 0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>and that&rsquo;s pretty much it.</p>

<p>Leave in the comments if you have anything in mind.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu | Linux: Some Handy Tools to Edit Audio, Video and Images]]></title>
    <link href="http://bhrigu123.github.io//blog/2016/04/01/ubuntu-some-handy-tools-to-edit-audio-slash-video/"/>
    <updated>2016-04-01T19:56:20+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2016/04/01/ubuntu-some-handy-tools-to-edit-audio-slash-video</id>
    <content type="html"><![CDATA[<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/ubuntutools/ubuntu.jpg" title="Ubuntu" >
</center>


<p><br></p>

<p>There are several tools &amp; libraries to edit audio/video files in Linux, such as change dimensions, video converter, resize/rotate images etc.<br>
Mainly we&rsquo;ll use avconv, which can be used as command line in <strong>Linux</strong>.</p>

<!-- more -->


<h3>1. Resize / Rotate images</h3>

<p>In <strong>Ubuntu</strong>, use <strong>nautilus-image-converter</strong>. It adds 2 new menu items, when you right click an image: resize and rotate. To install, run the command on your terminal:</p>

<p><code>sudo apt-get install nautilus-image-converter</code></p>

<p>Restart nautilus by running <code>nautilus -q</code> , and open your file browser. Right click on an image to see options for Resizing and Rotating.</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/ubuntutools/resize.png" title="Resize,Rotate images" >
</center>


<p><br>
You can even resize multiple images by selecting those images, right click and Resize.</p>

<hr>


<h3>2. Trim / cut an audio or video</h3>

<p>Use a command line tool <code>avconv</code> to trim audio/video. Install as:</p>

<p><code>sudo apt-get install libav-tools</code></p>

<p>To trim an audio/video run the command</p>

<p><code>avconv -i srcFileName -c:a copy -c:v copy -ss 00:03:40 -t 00:01:12 targetFileName</code></p>

<p>Time parameter is given in format hh:mm:ss <br>
The first time parameter is the start time. The second time parameter is the <strong>duration</strong> of the clip that you want from the start time. (<em>not the end time</em>)</p>

<hr>


<h3>3. Change video resolution</h3>

<p>Again <code>avconv</code> is used for this. (install as stated above)</p>

<p>For eg. to change resolution of a video to <strong>640x480</strong>, run the command</p>

<p><code>avconv -i video.mp4 -s 640x480 output.mp4</code></p>

<p><em>[Note]: If the above command doesn&rsquo;t run and gives you a warning to run with -strict -2, Run the command as <code>avconv -i video.mp4 -s 640x480 -strict -2 output.mp4</code></em></p>

<hr>


<h3>4. Change video format</h3>

<p>Using avconv to change format of a video, for eg, from <code>mov</code> to <code>mp4</code>. (install as stated above)</p>

<p><code>avconv -i video.mov -strict -2 output.mp4</code></p>

<hr>


<h3>5. Extract audio from Video file</h3>

<p>Using avconv, run the command</p>

<p><code>avconv -i video.mp4 -vn -f mp3 sound.mp3</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing JEEQuery]]></title>
    <link href="http://bhrigu123.github.io//blog/2015/09/01/deployed-and-hosted/"/>
    <updated>2015-09-01T23:02:57+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2015/09/01/deployed-and-hosted</id>
    <content type="html"><![CDATA[<p><code>The site's live.</code></p>

<p>It took a lot of work and testing to finally launch the beta version of <a href="https://www.facebook.com/jeequery">JEEQuery</a>. It is something I have been working on for a long time, which brought forward various challenges and hurdles, and kept me occupied all this time.</p>

<!--more -->


<p><a href="https://www.facebook.com/jeequery">JEEQuery</a> is actually a Q&amp;A app for students preparing for various engineering entrance examinations. Students can post Questions, providing description and use <em>tags</em>,  and get suitable answers from other fellow students.<br> The site offers easy to reach facilities and fundamental features such as upvoting, sharing, adding to favourites etc. The site mainly focuses on JEE preparation and provides various pre-defined tags, that are related to JEE, that could be used.</p>

<p>It was not a smooth journey after all, and took significant amount of hours, head scratching, brain teasing and was done amid some misfortunes, internship interviews, college etc. <br>
Although I handled the backends of the website, I got notable aid from my bother Yask ( <a href="http://github.com/yask123">@yask123</a> ) in it and significantly in the front end and designing. Also, Yask took over the deployment work efficiently, where we used Amazon Web Services and created a linux box instance running Ubuntu 14.04 with gunicorn and nginx server. Using AWS was something new for us, and created several obstructions, which were overcome and also taught us many things.</p>

<h3>Name and Graphics</h3>

<p>After several reviews, we settled for the name <em>JEEQuery</em>, which is short and handy, and also sounds similar to jquery ;)</p>

<p>The logo of our idea is a glowing <em>bulb</em>. Now a bulb actually symbolizes fundamental innovation and ideolog&hellip;.OK wait&hellip;who am I kidding. I don&rsquo;t know what it symbolizes. We just found it on ClipArt and it nicely replaces the &lsquo;Q&rsquo; in our title.</p>

<p>Here is the snapshot of About page:</p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/jq/about.png" title="[About [About]]" ><br>
</center>


<p><br><br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/jq/profile_500.png" width="300" height="300" title="[About [About]]" ><br>
    <center><small>Logo</small></center>
</center>


<p> <br/>
<br></p>

<h3>Links</h3>

<p>website: <a href="http://jeequery.com">http://jeequery.com</a></p>

<p>Facebook: <a href="https://www.facebook.com/jeequery">JEEQuery</a></p>

<p>So I hope this creates a proficient database of quality questions, and help students all over with their preparations.<br></p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting Django Project]]></title>
    <link href="http://bhrigu123.github.io//blog/2015/07/06/starting-django-project/"/>
    <updated>2015-07-06T09:25:47+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2015/07/06/starting-django-project</id>
    <content type="html"><![CDATA[<p><code>django-admin.py startproject newproj</code><br>
I had learnt the django framework basics quite a while ago, but never worked on or made a complete functional project.<br>
To kick off, I&rsquo;m starting a basic Q&amp;A app using django, and plan to learn along with the challenges I face, and discover new stuff.<!--more--></p>

<p>Now, I don&rsquo;t know much about other frameworks available, but I believe that django provides the best technique to handle the databases required and makes complicated db design a piece of cake. However, it is also important to understand how they work at the SQL level, to better understand what we are doing. <br>
Moreover, programming in python makes our code clean and formatted, allows easy debugging and modifications.</p>

<p>For me, I only like handling the backends of a website, while the templates or webpage/layout designing is not really my cup of tea.<br></p>

<center>
    <img class="[erimg]" src="http://bhrigu123.github.io//images/startdjango/er.jpg" width="500"><br>
    <small>
        That's right. Made a rough ER diagram also ;)
    </small> 
</center>


<p><br></p>

<p>So I hope this would be a good start, and I plan to create some more stuff and apps in the future that could be useful to people in some way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Ubuntu With Dual Boot (Easy Step-wise Guide)]]></title>
    <link href="http://bhrigu123.github.io//blog/2015/06/22/how-to-install-ubuntu-with-dual-boot-easy-step-wise-guide/"/>
    <updated>2015-06-22T14:30:32+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2015/06/22/how-to-install-ubuntu-with-dual-boot-easy-step-wise-guide</id>
    <content type="html"><![CDATA[<p>Here is the easy step-wise installation guide to install Ubuntu along side with your Windows (dual boot)</p>

<h4>Step 1: Make sure you have free, unallocated space</h4>

<p>Open your Windows, right click on your &lsquo;Computer&rsquo;, click on &lsquo;Manage&rsquo;, Click on &lsquo;Disk Management&rsquo; <br>
Here you shall see the current partitions of hard disk.<!--more--> <strong>Your computer allows at max of 4 primary partitions only.</strong> So make sure that you have no more than 2 partitions (as Windiows creates a reserved partition known as &lsquo;System Reserved&rsquo;, and we will install Ubuntu in the fourth one). <br>
In case you have 3 or more partitions, transfer all files from one partition to another and delete that partition. For eg. , Transfer all files from your E:// Drive to D:// drive, and in the &lsquo;Disk Management&rsquo;, right click on the partition corresponding to E:// drive and delete that partition. (such that you only have C:// and D:// drive in your <em>Computer</em> (and you will also see <em>System Reserved</em> in Disk Managament. So total 3 primary partitions))</p>

<p><em>[<code>Note:</code> If you have any important files on your PC, you must always back up your data in the proper drive or on another device /drive is possible. You are responsible for any changes being made on the computer, and always read the instructions carefully]</em></p>

<p><img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/diskmgmt.jpg" width="600">
<br>
The removed space is shown in black as &lsquo;Unallocated Space&rsquo;, where we&rsquo;ll install Ubuntu. <br>
(You can also shrink other volumes to create unallocated space, as required. I recommend at least 60 gb of space for Ubuntu, depending upon the type of work you will be doing.)</p>

<h4>Step 2: Download Ubuntu and make a bootable device</h4>

<p>Download the latest version of Ubuntu from <a href="http://www.ubuntu.com/download/desktop">here</a>
<br>
Now, a bootable pen drive is to be made using the downloaded .iso file. Download the software <a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/">Universal USB Installer</a>, and follow its instructions to do so. <br>
(Or you can also use <a href="https://rufus.akeo.ie/">Rufus</a>)</p>

<h4>Step 3: Boot the pen drive</h4>

<p>Restart your computer and press the Boot Menu Key, to open boot options when the display starts. (Usually it&rsquo;s F12 key) <br>
Select the Pen Drive to boot from it.<br>
When Ubuntu loads, select the option &lsquo;Install Ubuntu&rsquo; and follow the instructions.
Connect to the internet if possibe, and <em>check</em> on &lsquo;Install Updates while installing&rsquo; and &lsquo;Install Third Party Software&rsquo;</p>

<h4>Step 4: Creating Partitions for Ubuntu</h4>

<p>When it asks for the type of installation, select &lsquo;Something else&rsquo;.
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/somethingelse.png" width="600" height="800" title="[Select 'Something else' [Installation type]]" ></p>

<p>Now you would see the partitions of your disk as: <br>
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/partitions.jpeg" width="500" height="500" title="[[partitions]]" > <br>
In this image, sda1, sda2 and sda4 are the current partitions of the disk, and <strong>free space</strong> is the unallocated space. <br>
(If you see <em>unusable space</em> instead of <em>free space</em>, that means your computer already has 4 primary partitions, and you will need to delete one of the partition. Partition could be deleted from here also by selecting that partition and clicking on the minus &lsquo;-&rsquo; sign below (but data in that drive will be lost. Therefore, open windows, back up your data, and delete partition from there) )</p>

<p>Select the <em>free space</em>, click on &lsquo;+&rsquo; to create a partition for the root folder as: <br>
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/createpart.png" width="500"> <br>
Here, 20gb is being allocated for your workspace in Ubuntu. I recommend around 50-100 GB (depending on the work you will be doing.)</p>

<p>Select <em>free space</em> and Click on &lsquo;+&rsquo; again to create &lsquo;Swap Area&rsquo; as: <br>
<em>If you have less than 4GB of RAM, select the size of swap area equal to your RAM, else select 4GB. Since I have 4GB RAM, I&rsquo;ll select 4096 MB for Swap Area</em> <br>
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/swaparea.jpeg" width="500"> <br></p>

<p>Create another partition for &lsquo;Boot&rsquo; of 512 MB as:
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/newboot.jpg" width="500"></p>

<p>Now you have successfully created your partitions. The root directory <em>&lsquo;/&rsquo;</em> is where Ubuntu will be installed, and where you will save your files. Proceed and Confirm <em>&lsquo;Write Changes to Disk&rsquo;</em>.</p>

<p>Follow rest of the instructions to fill up your basic details, and continue with the installation. You will see the installation bar which takes a few minutes, and later will ask you to restart your computer.</p>

<h4>Step 5: Installation Complete</h4>

<p>When installation completes and the computer restarts, you will be asked to select an OS to boot. <br>
<img class="[diskimg]" src="http://bhrigu123.github.io//images/ubuntu/ubuntuboot.jpg" width="500"> <br>
The first option will launch Ubuntu.
The last <em>Windows loader</em> option will launch you Windows, like it used to before.</p>

<p>So I hope this tutorial was helpful to you, and you could install Ubuntu without any trouble. <br>
Comment here if you still have any doubts or problems, or for your feedback.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Game Is On]]></title>
    <link href="http://bhrigu123.github.io//blog/2015/06/18/the-game-is-on/"/>
    <updated>2015-06-18T23:01:16+05:30</updated>
    <id>http://bhrigu123.github.io//blog/2015/06/18/the-game-is-on</id>
    <content type="html"><![CDATA[<p>So after setting up octopress and learning how to use it and deploy using Github, I have finally set out to blogging, which I wanted to start for a long time but was everytime too lazy to set up my computer.</p>

<p>Now, for a novice like me, this blogging technique is much different from the regular blogging websites, like Wordpress, since you have to work <!--more--> using the terminal (shell) of your system, and to be honest, it is much more fun this way. It gives you more of a hacker&rsquo;s feel as you have to do a lot of shell scripting. Moreover, markdown language makes writing posts easier as well as interesting.<br>
I&rsquo;m looking forward to explore the functionalities this blogging service can provide, and experiment with the third party plugins to get more features.</p>

<p>One more reason I couldn&rsquo;t start a blog earlier was that I wasn&rsquo;t sure about the content I would put in it. Now that I&rsquo;ve started competitive programming and some web development, I would post about problem solving skills and algorithms (as I learn along), personal experiences, and also anything that is worth sharing and I find could be of service to you.</p>

<p>Comments and feedbacks are always welcome, and I am also keen to follow more blogs, so get in touch.</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
</feed>
